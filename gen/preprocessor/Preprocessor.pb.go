// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: proto/Preprocessor.proto

package preprocessor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_proto_Preprocessor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Preprocessor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_proto_Preprocessor_proto_rawDescGZIP(), []int{0}
}

func (x *Image) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type PreprocessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseImage     *Image                 `protobuf:"bytes,1,opt,name=base_image,json=baseImage,proto3" json:"base_image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreprocessRequest) Reset() {
	*x = PreprocessRequest{}
	mi := &file_proto_Preprocessor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreprocessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreprocessRequest) ProtoMessage() {}

func (x *PreprocessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Preprocessor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreprocessRequest.ProtoReflect.Descriptor instead.
func (*PreprocessRequest) Descriptor() ([]byte, []int) {
	return file_proto_Preprocessor_proto_rawDescGZIP(), []int{1}
}

func (x *PreprocessRequest) GetBaseImage() *Image {
	if x != nil {
		return x.BaseImage
	}
	return nil
}

type PreprocessResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProcessedImage *Image                 `protobuf:"bytes,1,opt,name=processed_image,json=processedImage,proto3" json:"processed_image,omitempty"`
	FacialArea     *FacialArea            `protobuf:"bytes,6,opt,name=facial_area,json=facialArea,proto3" json:"facial_area,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PreprocessResponse) Reset() {
	*x = PreprocessResponse{}
	mi := &file_proto_Preprocessor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreprocessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreprocessResponse) ProtoMessage() {}

func (x *PreprocessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Preprocessor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreprocessResponse.ProtoReflect.Descriptor instead.
func (*PreprocessResponse) Descriptor() ([]byte, []int) {
	return file_proto_Preprocessor_proto_rawDescGZIP(), []int{2}
}

func (x *PreprocessResponse) GetProcessedImage() *Image {
	if x != nil {
		return x.ProcessedImage
	}
	return nil
}

func (x *PreprocessResponse) GetFacialArea() *FacialArea {
	if x != nil {
		return x.FacialArea
	}
	return nil
}

type FacialArea struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             int32                  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	W             int32                  `protobuf:"varint,3,opt,name=w,proto3" json:"w,omitempty"`
	H             int32                  `protobuf:"varint,4,opt,name=h,proto3" json:"h,omitempty"`
	LeftEye       *Eye                   `protobuf:"bytes,5,opt,name=left_eye,json=leftEye,proto3" json:"left_eye,omitempty"`
	RightEye      *Eye                   `protobuf:"bytes,6,opt,name=right_eye,json=rightEye,proto3" json:"right_eye,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FacialArea) Reset() {
	*x = FacialArea{}
	mi := &file_proto_Preprocessor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FacialArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacialArea) ProtoMessage() {}

func (x *FacialArea) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Preprocessor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacialArea.ProtoReflect.Descriptor instead.
func (*FacialArea) Descriptor() ([]byte, []int) {
	return file_proto_Preprocessor_proto_rawDescGZIP(), []int{3}
}

func (x *FacialArea) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *FacialArea) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *FacialArea) GetW() int32 {
	if x != nil {
		return x.W
	}
	return 0
}

func (x *FacialArea) GetH() int32 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *FacialArea) GetLeftEye() *Eye {
	if x != nil {
		return x.LeftEye
	}
	return nil
}

func (x *FacialArea) GetRightEye() *Eye {
	if x != nil {
		return x.RightEye
	}
	return nil
}

type Eye struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             int32                  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Eye) Reset() {
	*x = Eye{}
	mi := &file_proto_Preprocessor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Eye) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Eye) ProtoMessage() {}

func (x *Eye) ProtoReflect() protoreflect.Message {
	mi := &file_proto_Preprocessor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Eye.ProtoReflect.Descriptor instead.
func (*Eye) Descriptor() ([]byte, []int) {
	return file_proto_Preprocessor_proto_rawDescGZIP(), []int{4}
}

func (x *Eye) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Eye) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

var File_proto_Preprocessor_proto protoreflect.FileDescriptor

var file_proto_Preprocessor_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x50, 0x72, 0x65, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x22, 0x19, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0x47, 0x0a, 0x11, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50,
	0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x8d, 0x01, 0x0a,
	0x12, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50,
	0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x39, 0x0a, 0x0b, 0x66, 0x61, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x61, 0x72, 0x65, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x46, 0x61, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61,
	0x52, 0x0a, 0x66, 0x61, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61, 0x22, 0xa2, 0x01, 0x0a,
	0x0a, 0x46, 0x61, 0x63, 0x69, 0x61, 0x6c, 0x41, 0x72, 0x65, 0x61, 0x12, 0x0c, 0x0a, 0x01, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x01, 0x77, 0x12, 0x0c, 0x0a, 0x01, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x01, 0x68, 0x12, 0x2c, 0x0a, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x65, 0x79, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x2e, 0x65, 0x79, 0x65, 0x52, 0x07, 0x6c, 0x65, 0x66, 0x74, 0x45, 0x79,
	0x65, 0x12, 0x2e, 0x0a, 0x09, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x65, 0x79, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x2e, 0x65, 0x79, 0x65, 0x52, 0x08, 0x72, 0x69, 0x67, 0x68, 0x74, 0x45, 0x79,
	0x65, 0x22, 0x21, 0x0a, 0x03, 0x65, 0x79, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x79, 0x32, 0x61, 0x0a, 0x0c, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x12, 0x51, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x1f, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x15, 0x5a, 0x13, 0x2e, 0x2e, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x70, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_Preprocessor_proto_rawDescOnce sync.Once
	file_proto_Preprocessor_proto_rawDescData = file_proto_Preprocessor_proto_rawDesc
)

func file_proto_Preprocessor_proto_rawDescGZIP() []byte {
	file_proto_Preprocessor_proto_rawDescOnce.Do(func() {
		file_proto_Preprocessor_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_Preprocessor_proto_rawDescData)
	})
	return file_proto_Preprocessor_proto_rawDescData
}

var file_proto_Preprocessor_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_Preprocessor_proto_goTypes = []any{
	(*Image)(nil),              // 0: Preprocessor.Image
	(*PreprocessRequest)(nil),  // 1: Preprocessor.PreprocessRequest
	(*PreprocessResponse)(nil), // 2: Preprocessor.PreprocessResponse
	(*FacialArea)(nil),         // 3: Preprocessor.FacialArea
	(*Eye)(nil),                // 4: Preprocessor.eye
}
var file_proto_Preprocessor_proto_depIdxs = []int32{
	0, // 0: Preprocessor.PreprocessRequest.base_image:type_name -> Preprocessor.Image
	0, // 1: Preprocessor.PreprocessResponse.processed_image:type_name -> Preprocessor.Image
	3, // 2: Preprocessor.PreprocessResponse.facial_area:type_name -> Preprocessor.FacialArea
	4, // 3: Preprocessor.FacialArea.left_eye:type_name -> Preprocessor.eye
	4, // 4: Preprocessor.FacialArea.right_eye:type_name -> Preprocessor.eye
	1, // 5: Preprocessor.Preprocessor.Preprocess:input_type -> Preprocessor.PreprocessRequest
	2, // 6: Preprocessor.Preprocessor.Preprocess:output_type -> Preprocessor.PreprocessResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_Preprocessor_proto_init() }
func file_proto_Preprocessor_proto_init() {
	if File_proto_Preprocessor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_Preprocessor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_Preprocessor_proto_goTypes,
		DependencyIndexes: file_proto_Preprocessor_proto_depIdxs,
		MessageInfos:      file_proto_Preprocessor_proto_msgTypes,
	}.Build()
	File_proto_Preprocessor_proto = out.File
	file_proto_Preprocessor_proto_rawDesc = nil
	file_proto_Preprocessor_proto_goTypes = nil
	file_proto_Preprocessor_proto_depIdxs = nil
}
